name: Build (Ubuntu)

on:
    pull_request:
    workflow_dispatch:

jobs:
    build:
        name: Build Windows plugin on Ubuntu using cross-compilation
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Build the Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./dockerfile-ubuntu-build
                  push: false
                  tags: ukcp-builder:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  load: true
                  platforms: linux/amd64

            - name: Setup build version
              run: |
                  docker run -v ${{ github.workspace }}:/workspace -w /workspace ukcp-builder \
                    /bin/bash -c "
                      chmod +x ./.github/workflows/plugin_version.sh
                      echo 'non-release-build' > build_version.txt
                      version_file='./src/utils/update/PluginVersion.cpp'
                      if [[ -f \"\$version_file\" ]]; then
                          sed -i 's/#VERSION_STRING#/non-release-build/g' \"\$version_file\"
                          echo 'Version string updated'
                      else
                          echo 'Warning: PluginVersion.cpp not found. Skipping version replacement.'
                      fi
                    "

            - name: Run CMake Configuration
              run: |
                  docker run -v ${{ github.workspace }}:/workspace -w /workspace ukcp-builder \
                    /bin/bash -c "cmake -DCMAKE_BUILD_TYPE=Release \
                      -DCMAKE_TOOLCHAIN_FILE=\$TOOLCHAIN \
                      -DCMAKE_C_FLAGS=\"-DFMT_USE_CONSTEXPR=0\" \
                      -DCMAKE_CXX_FLAGS=\"-DFMT_USE_CONSTEXPR=0\" \
                      -G Ninja -B build"

            - name: Build the plugin
              timeout-minutes: 60
              run: |
                  docker run -v ${{ github.workspace }}:/workspace -w /workspace/build ukcp-builder \
                    /bin/bash -c "ninja"

            - name: Run Tests
              continue-on-error: true
              run: |
                  docker run -v ${{ github.workspace }}:/workspace -w /workspace/build ukcp-builder \
                    /bin/bash -c "ctest -C Release --output-on-failure --no-tests=error || echo 'Tests completed with issues'"

            - name: Upload Core Binary As Artifact
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: UKControllerPluginCore-ubuntu.dll
                  path: "./build/bin/UKControllerPluginCore.dll"

            - name: Upload Updater Binary As Artifact
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: UKControllerPluginUpdater-ubuntu.dll
                  path: "./build/bin/UKControllerPluginUpdater.dll"

            - name: Upload Loader Binary As Artifact
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: UKControllerPlugin-ubuntu.dll
                  path: "./build/bin/UKControllerPlugin.dll"
